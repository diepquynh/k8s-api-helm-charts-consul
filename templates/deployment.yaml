{{- if .Values.service -}}
{{- if .Values.service.required }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.service.autoscaling.enabled }}
  replicas: {{ .Values.service.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{ "consul.hashicorp.com/connect-service" }}: {{ include "api.serviceAccountName" . }}
        {{- with .Values.service.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "api.labels" . | nindent 8 }}
        {{- with .Values.service.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.service.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "api.serviceAccountName" . }}
      {{- if .Values.service.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.service.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.service.securityContext }}
          securityContext:
            {{- toYaml .Values.service.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.service.image.repository }}:{{ .Values.service.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.service.image.pullPolicy }}
          {{- if .Values.service.env.envValues }}
          env:
          {{- range $i, $val := .Values.service.env.envValues }}
            - name: {{ $val.name | quote }}
              value: {{ $val.value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.service.env.envFrom }}
          envFrom:
            {{- toYaml .Values.service.env.envFrom | nindent 16 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.service.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.service.readinessProbe | nindent 12 }}
          {{- if .Values.service.resources }}
          resources:
            {{- toYaml .Values.service.resources | nindent 12 }}
          {{- end }}
          {{- with .Values.service.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.service.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.service.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.service.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.service.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
